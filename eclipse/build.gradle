eclipse{
  project {
    natures 'org.eclipse.pde.PluginNature'
  }
}


buildscript {
  repositories {
    maven {
      url  "http://dl.bintray.com/monkey-works/BuildMonkey"
    }
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
 dependencies {
    classpath "de.monkeyworks.buildmonkey:gradle.dependency:0.4.13"
  }
}

apply plugin: 'de.monkeyworks.buildmonkey.ManifestDependencyPlugin'

repositories {
  maven { url rootProject.file('build/maven') }
}

sourceSets {
  main.java.srcDirs = ['src',
                       'ext-src']

  main {
    resources {
      srcDir 'src'
      exclude '**/*.java'
    }
  }

  test {
    java.srcDir 'test/junit'
  }
}

manifestDependencies {
    eclipseGroup = 'eclipse-deps'

    dependencyHandling {
      def ids = [:]
      if (it.matches('org.junit'))
      {
        ids['groupId'] = 'junit'
        ids['artifactId'] = 'junit'
        ids['version'] = '4.11'
      }
      return ids
    }
}

dependencies {
  compile project(':saros.core')
  compile project(':saros.ui')

  compile project(path: ':saros.core', configuration: 'testing')
  compile project(path: ':saros.ui', configuration: 'testing')

  testImplementation configurations.testConfig
}

tasks.withType(Test) {
  enableAssertions = false
}

compileJava.dependsOn rootProject.mavenizeP2Repository

jar {
  manifest {
      // benutze das im Projekt vorliegende File, falls vorhanden:
      def manif = "${projectDir}/META-INF/MANIFEST.MF"
      if (new File(manif).exists()) {
         from (manif)
      }
  }

  from sourceSets.main.output

  into('lib') {
    from configurations.getByName('releaseDep')
  }
  into('assets') {
    from 'assets'
  }
  into('icons') {
    from 'icons'
  }
  from('.') {
    include '*.properties'
    include 'readme.html'
    include 'plugin.xml'
    include 'version.comp'
    include 'LICENSE'
    include 'CHANGELOG'
  }
}

task testJar(type: Jar) {
  classifier = 'tests'
  from sourceSets.test.output
}

compileJava.dependsOn rootProject.mavenizeP2Repository

artifacts {
  testing testJar
}
