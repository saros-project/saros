<?xml version="1.0"?>

<project name="saros-server"
         default="test"
         xmlns:ivy="antlib:org.apache.ivy.ant">

    <property environment="env" />
    <property name="ivy.install.version" value="2.4.0" />

    <property name="test.haltonfailure" value="off" />

    <property name="core.basedirname" value="de.fu_berlin.inf.dpp.core" />
    <property name="core.basedir" value="${basedir}/../${core.basedirname}" />
    <property name="core.srcdir" value="${core.basedir}/src" />
    <property name="core.libdir" value="${core.basedir}/lib" />
    <property name="core.testlibdir" value="${core.basedir}/test/lib" />

    <property name="server.srcdir" value="${basedir}/src" />
    <property name="server.testdir" value="${basedir}/test/junit" />
    <property name="server.builddir" value="${basedir}/bin" />
    <property name="server.testbuilddir" value="${basedir}/bin_test" />
    <property name="server.instrdir" value="${basedir}/instr" />
    <property name="server.reportdir" value="${basedir}/report" />
    <property name="server.reportdir.junit" value="${server.reportdir}/junit" />
    <property name="server.reportdir.cobertura"
              value="${server.reportdir}/cobertura" />
    <property name="server.cobertura.datafile"
              value="${server.reportdir.cobertura}/cobertura.ser" />
    <property name="server.libdir" value="${basedir}/lib" />

    <path id="cobertura.classpath">
        <fileset dir="${server.libdir}">
            <include name="*.jar" />
        </fileset>
    </path>

    <target name="resolve" depends="init-ivy">
        <ivy:retrieve />
    </target>

    <target name="build" depends="resolve">
        <mkdir dir="${server.builddir}" />
        <javac destdir="${server.builddir}"
               includeantruntime="false"
               encoding="UTF-8"
               debug="on">
            <src>
                <pathelement path="${core.srcdir}" />
                <pathelement path="${server.srcdir}" />
            </src>
            <classpath>
                <fileset dir="${core.libdir}" includes="*.jar" />
                <fileset dir="${server.libdir}" includes="*.jar" />
            </classpath>
        </javac>

        <mkdir dir="${server.testbuilddir}" />
        <javac destdir="${server.testbuilddir}" includeantruntime="false">
            <src>
                <pathelement path="${server.testdir}" />
            </src>
            <classpath>
                <pathelement path="${server.builddir}" />
                <fileset dir="${core.libdir}" includes="*.jar" />
                <fileset dir="${core.testlibdir}" includes="*.jar" />
                <fileset dir="${server.libdir}" includes="*.jar" />
            </classpath>
        </javac>
    </target>

    <target name="instrument">
        <taskdef classpathref="cobertura.classpath"
                 resource="tasks.properties" />

        <path id="aux.classpath">
            <fileset dir="${core.libdir}" includes="*.jar" />
            <fileset dir="${core.testlibdir}" includes="*.jar" />
            <fileset dir="${server.libdir}" includes="*.jar" />
        </path>

        <mkdir dir="${server.instrdir}" />

        <cobertura-instrument todir="${server.instrdir}"
                              datafile="${server.cobertura.datafile}">
            <includeClasses regex="de\.fu_berlin\.inf\.dpp\.server.*" />
            <excludeClasses regex=".*Test" />
            <excludeClasses regex=".*Test\$.*" />
            <fileset dir="${server.builddir}">
                <include name="**/*.class" />
            </fileset>
            <auxClasspath refId="aux.classpath" />
        </cobertura-instrument>
    </target>

    <target name="test" depends="build, instrument">
        <mkdir dir="${server.reportdir.junit}" />
        <junit fork="yes" forkmode="once" haltonfailure="${test.haltonfailure}" >
            <sysproperty key="net.sourceforge.cobertura.datafile"
                         file="${server.cobertura.datafile}" />
            <classpath location="${server.instrdir}" />
            <classpath>
                <pathelement path="${server.builddir}" />
                <pathelement path="${server.testbuilddir}" />
                <fileset dir="${core.libdir}" includes="*.jar" />
                <fileset dir="${core.testlibdir}" includes="*.jar" />
                <fileset dir="${server.libdir}" includes="*.jar" />
                <pathelement path="${java.class.path}" />
            </classpath>
            <classpath refid="cobertura.classpath" />
            <formatter type="xml" />
            <formatter type="plain" usefile="false" />
            <batchtest todir="${server.reportdir.junit}">
                <fileset dir="${server.testbuilddir}"
                         includes="**/*Test.class" />
            </batchtest>
        </junit>
        <cobertura-report format="xml"
                          datafile="${server.cobertura.datafile}"
                          destdir="${server.reportdir.cobertura}"
                          srcdir="${server.srcdir}" />
    </target>

    <target name="clean">
        <delete dir="${server.builddir}" failonerror="no" />
        <delete dir="${server.testbuilddir}" failonerror="no" />
        <delete dir="${server.reportdir.junit}" failonerror="no" />
        <delete dir="${server.reportdir.cobertura}" failonerror="no" />
        <delete dir="${server.instrdir}" failonerror="no" />
    </target>

    <!--
        Apache Ivy Auto-Installation
        https://ant.apache.org/ivy/history/latest-milestone/install.html
    -->

    <condition property="ivy.home" value="${env.IVY_HOME}">
        <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.home" value="${user.home}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <target name="download-ivy" unless="offline">
        <mkdir dir="${ivy.jar.dir}" />
        <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}"
             usetimestamp="true" />
    </target>

    <target name="init-ivy" depends="download-ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar" />
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant"
                 classpathref="ivy.lib.path" />
    </target>
</project>
