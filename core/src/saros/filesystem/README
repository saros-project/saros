This package must/should contain all interfaces for accessing and (read/create) data.

Before any interfaces are created an analysis of existing FILE SYSTEM APIS has to be performed !

Just wrapping the Eclipse API is not sufficient as some features might not be available on other
IDEs or are very hard to implement if the interfaces (methods, design pattern etc...) are set into stone

This API should include:

Very detailed reports of file changes in the workspace (see SharedResourceManager, Eclipse WorkspaceListener)

Creating paths from a given string (see eclipse Path class) and converting them to an OS independent
representation (see IPath#toPortableString)

The possibility to run file manipulations in an atomic context (see Eclipse WorkspaceRunnables)

Discovering projects by using a string a name id.
Discovering resource (files, folder) from a project by using a path object or just a simple string as name id.

Nice to have:

Partial locking of the workspace for file operations (see Eclipse scheduling rules for WorkspaceRunnables or direct
access to the like IJobManager#beginRule(...))
History management to recover files.


TODO:
delete this file if it is no longer needed